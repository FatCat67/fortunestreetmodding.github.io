---
import Layout from '~/layouts/layout.astro';
---
<script>
  import { bsvirt_to_bsfile, bsvirt_to_fsvirt, fsvirt_to_fsfile } from '~/lib/addressconverter';
  
  let fsvirt: number | null;
  let bsvirt: number | null;
  let fsfile: number | null;
  let bsfile: number | null;

  const setAddress = (input: HTMLInputElement, address: number | null): number | null => {
    if (address !== null) {
      input.value = address.toString(16);
    }
    return address;
  };

  const fsvirt_input = document.getElementById('fsvirt_input') as HTMLInputElement;
  const bsvirt_input = document.getElementById('bsvirt_input') as HTMLInputElement;
  const fsfile_input = document.getElementById('fsfile_input') as HTMLInputElement;
  const bsfile_input = document.getElementById('bsfile_input') as HTMLInputElement;

  const inputHandler = (e: Event) => {
    const target = e.target as HTMLInputElement;
    fsvirt_input.classList.remove('is-valid', 'is-invalid');
    bsvirt_input.classList.remove('is-valid', 'is-invalid');
    fsfile_input.classList.remove('is-valid', 'is-invalid');
    bsfile_input.classList.remove('is-valid', 'is-invalid');
    let address = parseInt(target.value, 16);

    switch (target) {
      case fsvirt_input:
        fsvirt = address;
        bsvirt = setAddress(bsvirt_input, bsvirt_to_fsvirt.inverseMap(fsvirt));
        if (bsvirt !== null) {
          target.classList.add('is-valid');
          setAddress(fsfile_input, fsvirt_to_fsfile.map(fsvirt));
          setAddress(bsfile_input, bsvirt_to_bsfile.map(bsvirt));
        } else {
          target.classList.add('is-invalid');
        }
        break;
      case bsvirt_input:
        bsvirt = address;
        fsvirt = setAddress(fsvirt_input, bsvirt_to_fsvirt.map(bsvirt));
        if (fsvirt !== null) {
          target.classList.add('is-valid');
          setAddress(fsfile_input, fsvirt_to_fsfile.map(fsvirt));
          setAddress(bsfile_input, bsvirt_to_bsfile.map(bsvirt));
        } else {
          target.classList.add('is-invalid');
        }
        break;
      case fsfile_input:
        fsfile = address;
        fsvirt = setAddress(fsvirt_input, fsvirt_to_fsfile.inverseMap(fsfile));
        if (fsvirt !== null) {
          target.classList.add('is-valid');
          bsvirt = setAddress(bsvirt_input, bsvirt_to_fsvirt.inverseMap(fsvirt));
          if (bsvirt !== null) {
            setAddress(bsfile_input, bsvirt_to_bsfile.map(bsvirt));
          }
        } else {
          target.classList.add('is-invalid');
        }
        break;
      case bsfile_input:
        bsfile = address;
        bsvirt = setAddress(bsvirt_input, bsvirt_to_bsfile.inverseMap(bsfile));
        if (bsvirt !== null) {
          target.classList.add('is-valid');
          fsvirt = setAddress(fsvirt_input, bsvirt_to_fsvirt.map(bsvirt));
          if (fsvirt !== null) {
            setAddress(fsfile_input, fsvirt_to_fsfile.map(fsvirt));
          }
        } else {
          target.classList.add('is-invalid');
        }
        break;
    }
  };

  // Add event listeners to input elements
  fsvirt_input.addEventListener('input', inputHandler);
  bsvirt_input.addEventListener('input', inputHandler);
  fsfile_input.addEventListener('input', inputHandler);
  bsfile_input.addEventListener('input', inputHandler);
</script>
<Layout title="Address Calculator">
  <section class="jumbotron text-center">
    <div class="w3-card-4 w3-center w3-display-topmiddle w3-margin-bottom-16">
      <h1 class="w3-container w3-blue w3-padding-16">Fortune Street Address Calculator</h1>
      <div class="container text-center">
        <div class="row row-cols-2 g-3">
          <div class="col">
            <label class="form-label">Fortune Street Virtual</label>
            <input type="text" id="fsvirt_input" placeholder="80004000" class="form-control" />
          </div>
          <div class="col">
            <label class="form-label">Boom Street Virtual</label>
            <input type="text" id="bsvirt_input" placeholder="80004000" class="form-control" />
          </div>
          <div class="col">
            <label class="form-label">Fortune Street File</label>
            <input type="text" id="fsfile_input" placeholder="100" class="form-control" />
          </div>
          <div class="col">
            <label class="form-label">Boom Street File</label>
            <input type="text" id="bsfile_input" placeholder="100" class="form-control" />
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>
